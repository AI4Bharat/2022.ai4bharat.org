//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
export function gql(strings: TemplateStringsArray, ...args: string[]): string {
  let str = ''
  strings.forEach((string, i) => {
    str += string + (args[i] || '')
  })
  return str
}
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  post: Post;
  postConnection: PostConnection;
  global: Global;
  globalConnection: GlobalConnection;
  author: Author;
  authorConnection: AuthorConnection;
  page: Page;
  pageConnection: PageConnection;
  area: Area;
  areaConnection: AreaConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
};


export type QueryGlobalArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGlobalConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
};


export type QueryAuthorArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAuthorConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
};


export type QueryAreaArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryAreaConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
};

export type DocumentNode = Post | Global | Author | Page | Area;

export type PostAuthor = Author;

export type Post = Node & Document & {
  __typename?: 'Post';
  title?: Maybe<Scalars['String']>;
  heroImg?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['JSON']>;
  author?: Maybe<PostAuthor>;
  _body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PostConnectionEdges = {
  __typename?: 'PostConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Post>;
};

export type PostConnection = Connection & {
  __typename?: 'PostConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;
};

export type GlobalHeaderIcon = {
  __typename?: 'GlobalHeaderIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type GlobalHeaderNavSubitemsIcon = {
  __typename?: 'GlobalHeaderNavSubitemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type GlobalHeaderNavSubitems = {
  __typename?: 'GlobalHeaderNavSubitems';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<GlobalHeaderNavSubitemsIcon>;
  description?: Maybe<Scalars['String']>;
};

export type GlobalHeaderNav = {
  __typename?: 'GlobalHeaderNav';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  dropdown?: Maybe<Scalars['Boolean']>;
  orientation?: Maybe<Scalars['String']>;
  subitems?: Maybe<Array<Maybe<GlobalHeaderNavSubitems>>>;
};

export type GlobalHeaderAreasIcon = {
  __typename?: 'GlobalHeaderAreasIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type GlobalHeaderAreas = {
  __typename?: 'GlobalHeaderAreas';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<GlobalHeaderAreasIcon>;
  description?: Maybe<Scalars['String']>;
  comingSoon?: Maybe<Scalars['Boolean']>;
  updated?: Maybe<Scalars['Boolean']>;
};

export type GlobalHeaderResourcesIcon = {
  __typename?: 'GlobalHeaderResourcesIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type GlobalHeaderResources = {
  __typename?: 'GlobalHeaderResources';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  icon?: Maybe<GlobalHeaderResourcesIcon>;
  description?: Maybe<Scalars['String']>;
};

export type GlobalHeader = {
  __typename?: 'GlobalHeader';
  icon?: Maybe<GlobalHeaderIcon>;
  color?: Maybe<Scalars['String']>;
  nav?: Maybe<Array<Maybe<GlobalHeaderNav>>>;
  areas?: Maybe<Array<Maybe<GlobalHeaderAreas>>>;
  resources?: Maybe<Array<Maybe<GlobalHeaderResources>>>;
};

export type GlobalFooterSocial = {
  __typename?: 'GlobalFooterSocial';
  map?: Maybe<Scalars['String']>;
  facebook?: Maybe<Scalars['String']>;
  twitter?: Maybe<Scalars['String']>;
  linkedin?: Maybe<Scalars['String']>;
  github?: Maybe<Scalars['String']>;
};

export type GlobalFooter = {
  __typename?: 'GlobalFooter';
  color?: Maybe<Scalars['String']>;
  paraText?: Maybe<Scalars['String']>;
  social?: Maybe<GlobalFooterSocial>;
};

export type GlobalTheme = {
  __typename?: 'GlobalTheme';
  color?: Maybe<Scalars['String']>;
  font?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
};

export type Global = Node & Document & {
  __typename?: 'Global';
  header?: Maybe<GlobalHeader>;
  footer?: Maybe<GlobalFooter>;
  theme?: Maybe<GlobalTheme>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type GlobalConnectionEdges = {
  __typename?: 'GlobalConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Global>;
};

export type GlobalConnection = Connection & {
  __typename?: 'GlobalConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<GlobalConnectionEdges>>>;
};

export type Author = Node & Document & {
  __typename?: 'Author';
  name?: Maybe<Scalars['String']>;
  avatar?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type AuthorConnectionEdges = {
  __typename?: 'AuthorConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Author>;
};

export type AuthorConnection = Connection & {
  __typename?: 'AuthorConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AuthorConnectionEdges>>>;
};

export type PageBlocksHeroActions = {
  __typename?: 'PageBlocksHeroActions';
  label?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['Boolean']>;
  link?: Maybe<Scalars['String']>;
};

export type PageBlocksHeroImage = {
  __typename?: 'PageBlocksHeroImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  tagline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['JSON']>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;
  image?: Maybe<PageBlocksHeroImage>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsIcon = {
  __typename?: 'PageBlocksFeaturesItemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesItems = {
  __typename?: 'PageBlocksFeaturesItems';
  icon?: Maybe<PageBlocksFeaturesItemsIcon>;
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksFeatures = {
  __typename?: 'PageBlocksFeatures';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesAltItemsIcon = {
  __typename?: 'PageBlocksFeaturesAltItemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesAltItems = {
  __typename?: 'PageBlocksFeaturesAltItems';
  icon?: Maybe<PageBlocksFeaturesAltItemsIcon>;
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  linkPlaceholder?: Maybe<Scalars['String']>;
  comingSoon?: Maybe<Scalars['Boolean']>;
  updated?: Maybe<Scalars['Boolean']>;
  pointerDetail1?: Maybe<Scalars['String']>;
  pointerDetail2?: Maybe<Scalars['String']>;
  pointerDetail3?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt = {
  __typename?: 'PageBlocksFeaturesAlt';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesAltItems>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt2ItemsIcon = {
  __typename?: 'PageBlocksFeaturesAlt2ItemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt2Items = {
  __typename?: 'PageBlocksFeaturesAlt2Items';
  icon?: Maybe<PageBlocksFeaturesAlt2ItemsIcon>;
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt2 = {
  __typename?: 'PageBlocksFeaturesAlt2';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesAlt2Items>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksLongCardsGridItemsIcon = {
  __typename?: 'PageBlocksLongCardsGridItemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type PageBlocksLongCardsGridItems = {
  __typename?: 'PageBlocksLongCardsGridItems';
  icon?: Maybe<PageBlocksLongCardsGridItemsIcon>;
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  comingSoon?: Maybe<Scalars['Boolean']>;
  updated?: Maybe<Scalars['Boolean']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksLongCardsGrid = {
  __typename?: 'PageBlocksLongCardsGrid';
  items?: Maybe<Array<Maybe<PageBlocksLongCardsGridItems>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksCardGrid2Items = {
  __typename?: 'PageBlocksCardGrid2Items';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksCardGrid2 = {
  __typename?: 'PageBlocksCardGrid2';
  items?: Maybe<Array<Maybe<PageBlocksCardGrid2Items>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksContent = {
  __typename?: 'PageBlocksContent';
  body?: Maybe<Scalars['JSON']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksVideoCarouselVideoDetails = {
  __typename?: 'PageBlocksVideoCarouselVideoDetails';
  title?: Maybe<Scalars['String']>;
  embedCode?: Maybe<Scalars['String']>;
};

export type PageBlocksVideoCarousel = {
  __typename?: 'PageBlocksVideoCarousel';
  videoDetails?: Maybe<Array<Maybe<PageBlocksVideoCarouselVideoDetails>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksTestimonial = {
  __typename?: 'PageBlocksTestimonial';
  quote?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridItemsIcon = {
  __typename?: 'PageBlocksFlatCardsGridItemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridItemsChip = {
  __typename?: 'PageBlocksFlatCardsGridItemsChip';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridItems = {
  __typename?: 'PageBlocksFlatCardsGridItems';
  iconShown?: Maybe<Scalars['Boolean']>;
  icon?: Maybe<PageBlocksFlatCardsGridItemsIcon>;
  chip?: Maybe<PageBlocksFlatCardsGridItemsChip>;
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  iconColor?: Maybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGrid = {
  __typename?: 'PageBlocksFlatCardsGrid';
  title?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<PageBlocksFlatCardsGridItems>>>;
  highlightColor?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksBanner = {
  __typename?: 'PageBlocksBanner';
  title?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  highlightColor?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksFaq = {
  __typename?: 'PageBlocksFaq';
  title?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksQuote = {
  __typename?: 'PageBlocksQuote';
  quoteContent?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksTeamCardsGridItemsPersonImage = {
  __typename?: 'PageBlocksTeamCardsGridItemsPersonImage';
  src?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
};

export type PageBlocksTeamCardsGridItems = {
  __typename?: 'PageBlocksTeamCardsGridItems';
  teamGroup?: Maybe<Scalars['String']>;
  personName?: Maybe<Scalars['String']>;
  personDesignation?: Maybe<Scalars['String']>;
  personImage?: Maybe<PageBlocksTeamCardsGridItemsPersonImage>;
  personDescription?: Maybe<Scalars['String']>;
};

export type PageBlocksTeamCardsGrid = {
  __typename?: 'PageBlocksTeamCardsGrid';
  items?: Maybe<Array<Maybe<PageBlocksTeamCardsGridItems>>>;
  color?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  tabsEnabled?: Maybe<Scalars['Boolean']>;
};

export type PageBlocksPhotoCardsGrid2Items = {
  __typename?: 'PageBlocksPhotoCardsGrid2Items';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksPhotoCardsGrid2 = {
  __typename?: 'PageBlocksPhotoCardsGrid2';
  items?: Maybe<Array<Maybe<PageBlocksPhotoCardsGrid2Items>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksPhotoCardSingleItems = {
  __typename?: 'PageBlocksPhotoCardSingleItems';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type PageBlocksPhotoCardSingle = {
  __typename?: 'PageBlocksPhotoCardSingle';
  items?: Maybe<Array<Maybe<PageBlocksPhotoCardSingleItems>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksJobCardsGridItemsIcon = {
  __typename?: 'PageBlocksJobCardsGridItemsIcon';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type PageBlocksJobCardsGridItems = {
  __typename?: 'PageBlocksJobCardsGridItems';
  icon?: Maybe<PageBlocksJobCardsGridItemsIcon>;
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  duration?: Maybe<Scalars['String']>;
  jobType?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
};

export type PageBlocksJobCardsGrid = {
  __typename?: 'PageBlocksJobCardsGrid';
  items?: Maybe<Array<Maybe<PageBlocksJobCardsGridItems>>>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksPdfEmbed = {
  __typename?: 'PageBlocksPdfEmbed';
  title?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocksTable = {
  __typename?: 'PageBlocksTable';
  caption?: Maybe<Scalars['String']>;
  markdownTable?: Maybe<Scalars['String']>;
  markupTable?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
};

export type PageBlocks = PageBlocksHero | PageBlocksFeatures | PageBlocksFeaturesAlt | PageBlocksFeaturesAlt2 | PageBlocksLongCardsGrid | PageBlocksCardGrid2 | PageBlocksContent | PageBlocksVideoCarousel | PageBlocksTestimonial | PageBlocksFlatCardsGrid | PageBlocksBanner | PageBlocksFaq | PageBlocksQuote | PageBlocksTeamCardsGrid | PageBlocksPhotoCardsGrid2 | PageBlocksPhotoCardSingle | PageBlocksJobCardsGrid | PageBlocksPdfEmbed | PageBlocksTable;

export type Page = Node & Document & {
  __typename?: 'Page';
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type AreaAuthor = Author;

export type Area = Node & Document & {
  __typename?: 'Area';
  title?: Maybe<Scalars['String']>;
  heroImg?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['JSON']>;
  author?: Maybe<AreaAuthor>;
  date?: Maybe<Scalars['String']>;
  _body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type AreaConnectionEdges = {
  __typename?: 'AreaConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Area>;
};

export type AreaConnection = Connection & {
  __typename?: 'AreaConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AreaConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePost: Post;
  createPost: Post;
  updateGlobal: Global;
  createGlobal: Global;
  updateAuthor: Author;
  createAuthor: Author;
  updatePage: Page;
  createPage: Page;
  updateArea: Area;
  createArea: Area;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationCreatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationUpdateGlobalArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationCreateGlobalArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationUpdateAuthorArgs = {
  relativePath: Scalars['String'];
  params: AuthorMutation;
};


export type MutationCreateAuthorArgs = {
  relativePath: Scalars['String'];
  params: AuthorMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationUpdateAreaArgs = {
  relativePath: Scalars['String'];
  params: AreaMutation;
};


export type MutationCreateAreaArgs = {
  relativePath: Scalars['String'];
  params: AreaMutation;
};

export type DocumentMutation = {
  post?: InputMaybe<PostMutation>;
  global?: InputMaybe<GlobalMutation>;
  author?: InputMaybe<AuthorMutation>;
  page?: InputMaybe<PageMutation>;
  area?: InputMaybe<AreaMutation>;
};

export type PostMutation = {
  title?: InputMaybe<Scalars['String']>;
  heroImg?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['JSON']>;
  author?: InputMaybe<Scalars['String']>;
  _body?: InputMaybe<Scalars['JSON']>;
};

export type GlobalHeaderIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderNavSubitemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderNavSubitemsMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<GlobalHeaderNavSubitemsIconMutation>;
  description?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderNavMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  dropdown?: InputMaybe<Scalars['Boolean']>;
  orientation?: InputMaybe<Scalars['String']>;
  subitems?: InputMaybe<Array<InputMaybe<GlobalHeaderNavSubitemsMutation>>>;
};

export type GlobalHeaderAreasIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderAreasMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<GlobalHeaderAreasIconMutation>;
  description?: InputMaybe<Scalars['String']>;
  comingSoon?: InputMaybe<Scalars['Boolean']>;
  updated?: InputMaybe<Scalars['Boolean']>;
};

export type GlobalHeaderResourcesIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderResourcesMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<GlobalHeaderResourcesIconMutation>;
  description?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderMutation = {
  icon?: InputMaybe<GlobalHeaderIconMutation>;
  color?: InputMaybe<Scalars['String']>;
  nav?: InputMaybe<Array<InputMaybe<GlobalHeaderNavMutation>>>;
  areas?: InputMaybe<Array<InputMaybe<GlobalHeaderAreasMutation>>>;
  resources?: InputMaybe<Array<InputMaybe<GlobalHeaderResourcesMutation>>>;
};

export type GlobalFooterSocialMutation = {
  map?: InputMaybe<Scalars['String']>;
  facebook?: InputMaybe<Scalars['String']>;
  twitter?: InputMaybe<Scalars['String']>;
  linkedin?: InputMaybe<Scalars['String']>;
  github?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterMutation = {
  color?: InputMaybe<Scalars['String']>;
  paraText?: InputMaybe<Scalars['String']>;
  social?: InputMaybe<GlobalFooterSocialMutation>;
};

export type GlobalThemeMutation = {
  color?: InputMaybe<Scalars['String']>;
  font?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
};

export type GlobalMutation = {
  header?: InputMaybe<GlobalHeaderMutation>;
  footer?: InputMaybe<GlobalFooterMutation>;
  theme?: InputMaybe<GlobalThemeMutation>;
};

export type AuthorMutation = {
  name?: InputMaybe<Scalars['String']>;
  avatar?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroActionsMutation = {
  label?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['Boolean']>;
  link?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroMutation = {
  tagline?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['JSON']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksHeroActionsMutation>>>;
  image?: InputMaybe<PageBlocksHeroImageMutation>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesItemsMutation = {
  icon?: InputMaybe<PageBlocksFeaturesItemsIconMutation>;
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesAltItemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesAltItemsMutation = {
  icon?: InputMaybe<PageBlocksFeaturesAltItemsIconMutation>;
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  linkPlaceholder?: InputMaybe<Scalars['String']>;
  comingSoon?: InputMaybe<Scalars['Boolean']>;
  updated?: InputMaybe<Scalars['Boolean']>;
  pointerDetail1?: InputMaybe<Scalars['String']>;
  pointerDetail2?: InputMaybe<Scalars['String']>;
  pointerDetail3?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesAltMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesAltItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt2ItemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt2ItemsMutation = {
  icon?: InputMaybe<PageBlocksFeaturesAlt2ItemsIconMutation>;
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeaturesAlt2Mutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesAlt2ItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksLongCardsGridItemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PageBlocksLongCardsGridItemsMutation = {
  icon?: InputMaybe<PageBlocksLongCardsGridItemsIconMutation>;
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  comingSoon?: InputMaybe<Scalars['Boolean']>;
  updated?: InputMaybe<Scalars['Boolean']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksLongCardsGridMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksLongCardsGridItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardGrid2ItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardGrid2Mutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksCardGrid2ItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksContentMutation = {
  body?: InputMaybe<Scalars['JSON']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksVideoCarouselVideoDetailsMutation = {
  title?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
};

export type PageBlocksVideoCarouselMutation = {
  videoDetails?: InputMaybe<Array<InputMaybe<PageBlocksVideoCarouselVideoDetailsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTestimonialMutation = {
  quote?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridItemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridItemsChipMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridItemsMutation = {
  iconShown?: InputMaybe<Scalars['Boolean']>;
  icon?: InputMaybe<PageBlocksFlatCardsGridItemsIconMutation>;
  chip?: InputMaybe<PageBlocksFlatCardsGridItemsChipMutation>;
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  iconColor?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFlatCardsGridMutation = {
  title?: InputMaybe<Scalars['String']>;
  header?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksFlatCardsGridItemsMutation>>>;
  highlightColor?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksBannerMutation = {
  title?: InputMaybe<Scalars['String']>;
  header?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  highlightColor?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFaqMutation = {
  title?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksQuoteMutation = {
  quoteContent?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTeamCardsGridItemsPersonImageMutation = {
  src?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTeamCardsGridItemsMutation = {
  teamGroup?: InputMaybe<Scalars['String']>;
  personName?: InputMaybe<Scalars['String']>;
  personDesignation?: InputMaybe<Scalars['String']>;
  personImage?: InputMaybe<PageBlocksTeamCardsGridItemsPersonImageMutation>;
  personDescription?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTeamCardsGridMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksTeamCardsGridItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  tabsEnabled?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksPhotoCardsGrid2ItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPhotoCardsGrid2Mutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksPhotoCardsGrid2ItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPhotoCardSingleItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPhotoCardSingleMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksPhotoCardSingleItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksJobCardsGridItemsIconMutation = {
  color?: InputMaybe<Scalars['String']>;
  style?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type PageBlocksJobCardsGridItemsMutation = {
  icon?: InputMaybe<PageBlocksJobCardsGridItemsIconMutation>;
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  duration?: InputMaybe<Scalars['String']>;
  jobType?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
};

export type PageBlocksJobCardsGridMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksJobCardsGridItemsMutation>>>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksPdfEmbedMutation = {
  title?: InputMaybe<Scalars['String']>;
  header?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksTableMutation = {
  caption?: InputMaybe<Scalars['String']>;
  markdownTable?: InputMaybe<Scalars['String']>;
  markupTable?: InputMaybe<Scalars['String']>;
  color?: InputMaybe<Scalars['String']>;
};

export type PageBlocksMutation = {
  hero?: InputMaybe<PageBlocksHeroMutation>;
  features?: InputMaybe<PageBlocksFeaturesMutation>;
  featuresAlt?: InputMaybe<PageBlocksFeaturesAltMutation>;
  featuresAlt2?: InputMaybe<PageBlocksFeaturesAlt2Mutation>;
  longCardsGrid?: InputMaybe<PageBlocksLongCardsGridMutation>;
  cardGrid2?: InputMaybe<PageBlocksCardGrid2Mutation>;
  content?: InputMaybe<PageBlocksContentMutation>;
  videoCarousel?: InputMaybe<PageBlocksVideoCarouselMutation>;
  testimonial?: InputMaybe<PageBlocksTestimonialMutation>;
  flatCardsGrid?: InputMaybe<PageBlocksFlatCardsGridMutation>;
  banner?: InputMaybe<PageBlocksBannerMutation>;
  faq?: InputMaybe<PageBlocksFaqMutation>;
  quote?: InputMaybe<PageBlocksQuoteMutation>;
  teamCardsGrid?: InputMaybe<PageBlocksTeamCardsGridMutation>;
  photoCardsGrid2?: InputMaybe<PageBlocksPhotoCardsGrid2Mutation>;
  photoCardSingle?: InputMaybe<PageBlocksPhotoCardSingleMutation>;
  jobCardsGrid?: InputMaybe<PageBlocksJobCardsGridMutation>;
  pdfEmbed?: InputMaybe<PageBlocksPdfEmbedMutation>;
  table?: InputMaybe<PageBlocksTableMutation>;
};

export type PageMutation = {
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type AreaMutation = {
  title?: InputMaybe<Scalars['String']>;
  heroImg?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['JSON']>;
  author?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['String']>;
  _body?: InputMaybe<Scalars['JSON']>;
};

export type LayoutQueryFragmentFragment = { __typename?: 'Query', global: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null } };

export type PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type PageQueryQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', edges?: Array<{ __typename?: 'PostConnectionEdges', node?: { __typename?: 'Post', id: string, _values: any, author?: { __typename?: 'Author', name?: string | null, avatar?: string | null } | null, _sys: { __typename?: 'SystemInfo', filename: string } } | null } | null> | null }, global: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null } };

export type ContentQueryQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type ContentQueryQuery = { __typename?: 'Query', page: { __typename?: 'Page', blocks?: Array<{ __typename: 'PageBlocksHero', tagline?: string | null, headline?: string | null, text?: any | null, color?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, icon?: boolean | null, link?: string | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAltItems', title?: string | null, link?: string | null, linkPlaceholder?: string | null, comingSoon?: boolean | null, updated?: boolean | null, pointerDetail1?: string | null, pointerDetail2?: string | null, pointerDetail3?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAltItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt2', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAlt2Items', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAlt2ItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksLongCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksLongCardsGridItems', title?: string | null, link?: string | null, comingSoon?: boolean | null, updated?: boolean | null, text?: string | null, icon?: { __typename: 'PageBlocksLongCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksCardGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksCardGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksContent', body?: any | null, color?: string | null } | { __typename: 'PageBlocksVideoCarousel', color?: string | null, videoDetails?: Array<{ __typename: 'PageBlocksVideoCarouselVideoDetails', title?: string | null, embedCode?: string | null } | null> | null } | { __typename: 'PageBlocksTestimonial', quote?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksFlatCardsGrid', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null, items?: Array<{ __typename: 'PageBlocksFlatCardsGridItems', iconShown?: boolean | null, title?: string | null, link?: string | null, text?: string | null, iconColor?: string | null, icon?: { __typename: 'PageBlocksFlatCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null, chip?: { __typename: 'PageBlocksFlatCardsGridItemsChip', color?: string | null, style?: string | null, text?: string | null } | null } | null> | null } | { __typename: 'PageBlocksBanner', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null } | { __typename: 'PageBlocksFaq', title?: string | null, content?: string | null, color?: string | null } | { __typename: 'PageBlocksQuote', quoteContent?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksTeamCardsGrid', color?: string | null, link?: string | null, tabsEnabled?: boolean | null, items?: Array<{ __typename: 'PageBlocksTeamCardsGridItems', teamGroup?: string | null, personName?: string | null, personDesignation?: string | null, personDescription?: string | null, personImage?: { __typename: 'PageBlocksTeamCardsGridItemsPersonImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPhotoCardsGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardsGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksPhotoCardSingle', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardSingleItems', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksJobCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksJobCardsGridItems', title?: string | null, link?: string | null, duration?: string | null, jobType?: string | null, description?: string | null, icon?: { __typename: 'PageBlocksJobCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPdfEmbed', title?: string | null, header?: string | null, description?: string | null, url?: string | null, color?: string | null } | { __typename: 'PageBlocksTable', caption?: string | null, markdownTable?: string | null, markupTable?: string | null, color?: string | null } | null> | null }, global: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null } };

export type BlogPostQueryQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type BlogPostQueryQuery = { __typename?: 'Query', post: { __typename?: 'Post', title?: string | null, heroImg?: string | null, excerpt?: any | null, _body?: any | null, author?: { __typename?: 'Author', name?: string | null, avatar?: string | null, id: string } | null }, global: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null } };

export type PostPartsFragment = { __typename?: 'Post', title?: string | null, heroImg?: string | null, excerpt?: any | null, _body?: any | null, author?: { __typename?: 'Author', id: string } | null };

export type GlobalPartsFragment = { __typename?: 'Global', header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null };

export type AuthorPartsFragment = { __typename?: 'Author', name?: string | null, avatar?: string | null };

export type PagePartsFragment = { __typename?: 'Page', blocks?: Array<{ __typename: 'PageBlocksHero', tagline?: string | null, headline?: string | null, text?: any | null, color?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, icon?: boolean | null, link?: string | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAltItems', title?: string | null, link?: string | null, linkPlaceholder?: string | null, comingSoon?: boolean | null, updated?: boolean | null, pointerDetail1?: string | null, pointerDetail2?: string | null, pointerDetail3?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAltItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt2', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAlt2Items', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAlt2ItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksLongCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksLongCardsGridItems', title?: string | null, link?: string | null, comingSoon?: boolean | null, updated?: boolean | null, text?: string | null, icon?: { __typename: 'PageBlocksLongCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksCardGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksCardGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksContent', body?: any | null, color?: string | null } | { __typename: 'PageBlocksVideoCarousel', color?: string | null, videoDetails?: Array<{ __typename: 'PageBlocksVideoCarouselVideoDetails', title?: string | null, embedCode?: string | null } | null> | null } | { __typename: 'PageBlocksTestimonial', quote?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksFlatCardsGrid', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null, items?: Array<{ __typename: 'PageBlocksFlatCardsGridItems', iconShown?: boolean | null, title?: string | null, link?: string | null, text?: string | null, iconColor?: string | null, icon?: { __typename: 'PageBlocksFlatCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null, chip?: { __typename: 'PageBlocksFlatCardsGridItemsChip', color?: string | null, style?: string | null, text?: string | null } | null } | null> | null } | { __typename: 'PageBlocksBanner', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null } | { __typename: 'PageBlocksFaq', title?: string | null, content?: string | null, color?: string | null } | { __typename: 'PageBlocksQuote', quoteContent?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksTeamCardsGrid', color?: string | null, link?: string | null, tabsEnabled?: boolean | null, items?: Array<{ __typename: 'PageBlocksTeamCardsGridItems', teamGroup?: string | null, personName?: string | null, personDesignation?: string | null, personDescription?: string | null, personImage?: { __typename: 'PageBlocksTeamCardsGridItemsPersonImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPhotoCardsGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardsGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksPhotoCardSingle', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardSingleItems', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksJobCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksJobCardsGridItems', title?: string | null, link?: string | null, duration?: string | null, jobType?: string | null, description?: string | null, icon?: { __typename: 'PageBlocksJobCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPdfEmbed', title?: string | null, header?: string | null, description?: string | null, url?: string | null, color?: string | null } | { __typename: 'PageBlocksTable', caption?: string | null, markdownTable?: string | null, markupTable?: string | null, color?: string | null } | null> | null };

export type AreaPartsFragment = { __typename?: 'Area', title?: string | null, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, author?: { __typename?: 'Author', id: string } | null };

export type PostQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PostQuery = { __typename?: 'Query', post: { __typename?: 'Post', id: string, title?: string | null, heroImg?: string | null, excerpt?: any | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Author', id: string } | null } };

export type PostConnectionQueryVariables = Exact<{ [key: string]: never; }>;


export type PostConnectionQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', totalCount: number, edges?: Array<{ __typename?: 'PostConnectionEdges', node?: { __typename?: 'Post', id: string, title?: string | null, heroImg?: string | null, excerpt?: any | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Author', id: string } | null } | null } | null> | null } };

export type GlobalQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GlobalQuery = { __typename?: 'Query', global: { __typename?: 'Global', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null } };

export type GlobalConnectionQueryVariables = Exact<{ [key: string]: never; }>;


export type GlobalConnectionQuery = { __typename?: 'Query', globalConnection: { __typename?: 'GlobalConnection', totalCount: number, edges?: Array<{ __typename?: 'GlobalConnectionEdges', node?: { __typename?: 'Global', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, header?: { __typename: 'GlobalHeader', color?: string | null, icon?: { __typename: 'GlobalHeaderIcon', color?: string | null, style?: string | null, name?: string | null } | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, dropdown?: boolean | null, orientation?: string | null, subitems?: Array<{ __typename: 'GlobalHeaderNavSubitems', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderNavSubitemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null> | null, areas?: Array<{ __typename: 'GlobalHeaderAreas', href?: string | null, label?: string | null, description?: string | null, comingSoon?: boolean | null, updated?: boolean | null, icon?: { __typename: 'GlobalHeaderAreasIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null, resources?: Array<{ __typename: 'GlobalHeaderResources', href?: string | null, label?: string | null, description?: string | null, icon?: { __typename: 'GlobalHeaderResourcesIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', color?: string | null, paraText?: string | null, social?: { __typename: 'GlobalFooterSocial', map?: string | null, facebook?: string | null, twitter?: string | null, linkedin?: string | null, github?: string | null } | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null, font?: string | null, icon?: string | null } | null } | null } | null> | null } };

export type AuthorQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type AuthorQuery = { __typename?: 'Query', author: { __typename?: 'Author', id: string, name?: string | null, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type AuthorConnectionQueryVariables = Exact<{ [key: string]: never; }>;


export type AuthorConnectionQuery = { __typename?: 'Query', authorConnection: { __typename?: 'AuthorConnection', totalCount: number, edges?: Array<{ __typename?: 'AuthorConnectionEdges', node?: { __typename?: 'Author', id: string, name?: string | null, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename?: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', tagline?: string | null, headline?: string | null, text?: any | null, color?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, icon?: boolean | null, link?: string | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAltItems', title?: string | null, link?: string | null, linkPlaceholder?: string | null, comingSoon?: boolean | null, updated?: boolean | null, pointerDetail1?: string | null, pointerDetail2?: string | null, pointerDetail3?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAltItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt2', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAlt2Items', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAlt2ItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksLongCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksLongCardsGridItems', title?: string | null, link?: string | null, comingSoon?: boolean | null, updated?: boolean | null, text?: string | null, icon?: { __typename: 'PageBlocksLongCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksCardGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksCardGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksContent', body?: any | null, color?: string | null } | { __typename: 'PageBlocksVideoCarousel', color?: string | null, videoDetails?: Array<{ __typename: 'PageBlocksVideoCarouselVideoDetails', title?: string | null, embedCode?: string | null } | null> | null } | { __typename: 'PageBlocksTestimonial', quote?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksFlatCardsGrid', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null, items?: Array<{ __typename: 'PageBlocksFlatCardsGridItems', iconShown?: boolean | null, title?: string | null, link?: string | null, text?: string | null, iconColor?: string | null, icon?: { __typename: 'PageBlocksFlatCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null, chip?: { __typename: 'PageBlocksFlatCardsGridItemsChip', color?: string | null, style?: string | null, text?: string | null } | null } | null> | null } | { __typename: 'PageBlocksBanner', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null } | { __typename: 'PageBlocksFaq', title?: string | null, content?: string | null, color?: string | null } | { __typename: 'PageBlocksQuote', quoteContent?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksTeamCardsGrid', color?: string | null, link?: string | null, tabsEnabled?: boolean | null, items?: Array<{ __typename: 'PageBlocksTeamCardsGridItems', teamGroup?: string | null, personName?: string | null, personDesignation?: string | null, personDescription?: string | null, personImage?: { __typename: 'PageBlocksTeamCardsGridItemsPersonImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPhotoCardsGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardsGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksPhotoCardSingle', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardSingleItems', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksJobCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksJobCardsGridItems', title?: string | null, link?: string | null, duration?: string | null, jobType?: string | null, description?: string | null, icon?: { __typename: 'PageBlocksJobCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPdfEmbed', title?: string | null, header?: string | null, description?: string | null, url?: string | null, color?: string | null } | { __typename: 'PageBlocksTable', caption?: string | null, markdownTable?: string | null, markupTable?: string | null, color?: string | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{ [key: string]: never; }>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, edges?: Array<{ __typename?: 'PageConnectionEdges', node?: { __typename?: 'Page', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', tagline?: string | null, headline?: string | null, text?: any | null, color?: string | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, type?: string | null, icon?: boolean | null, link?: string | null } | null> | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAltItems', title?: string | null, link?: string | null, linkPlaceholder?: string | null, comingSoon?: boolean | null, updated?: boolean | null, pointerDetail1?: string | null, pointerDetail2?: string | null, pointerDetail3?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAltItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksFeaturesAlt2', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesAlt2Items', title?: string | null, link?: string | null, text?: string | null, icon?: { __typename: 'PageBlocksFeaturesAlt2ItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksLongCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksLongCardsGridItems', title?: string | null, link?: string | null, comingSoon?: boolean | null, updated?: boolean | null, text?: string | null, icon?: { __typename: 'PageBlocksLongCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksCardGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksCardGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksContent', body?: any | null, color?: string | null } | { __typename: 'PageBlocksVideoCarousel', color?: string | null, videoDetails?: Array<{ __typename: 'PageBlocksVideoCarouselVideoDetails', title?: string | null, embedCode?: string | null } | null> | null } | { __typename: 'PageBlocksTestimonial', quote?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksFlatCardsGrid', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null, items?: Array<{ __typename: 'PageBlocksFlatCardsGridItems', iconShown?: boolean | null, title?: string | null, link?: string | null, text?: string | null, iconColor?: string | null, icon?: { __typename: 'PageBlocksFlatCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null, chip?: { __typename: 'PageBlocksFlatCardsGridItemsChip', color?: string | null, style?: string | null, text?: string | null } | null } | null> | null } | { __typename: 'PageBlocksBanner', title?: string | null, header?: string | null, description?: string | null, highlightColor?: string | null, color?: string | null } | { __typename: 'PageBlocksFaq', title?: string | null, content?: string | null, color?: string | null } | { __typename: 'PageBlocksQuote', quoteContent?: string | null, author?: string | null, color?: string | null } | { __typename: 'PageBlocksTeamCardsGrid', color?: string | null, link?: string | null, tabsEnabled?: boolean | null, items?: Array<{ __typename: 'PageBlocksTeamCardsGridItems', teamGroup?: string | null, personName?: string | null, personDesignation?: string | null, personDescription?: string | null, personImage?: { __typename: 'PageBlocksTeamCardsGridItemsPersonImage', src?: string | null, alt?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPhotoCardsGrid2', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardsGrid2Items', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksPhotoCardSingle', color?: string | null, items?: Array<{ __typename: 'PageBlocksPhotoCardSingleItems', title?: string | null, image?: string | null, link?: string | null, text?: string | null } | null> | null } | { __typename: 'PageBlocksJobCardsGrid', color?: string | null, items?: Array<{ __typename: 'PageBlocksJobCardsGridItems', title?: string | null, link?: string | null, duration?: string | null, jobType?: string | null, description?: string | null, icon?: { __typename: 'PageBlocksJobCardsGridItemsIcon', color?: string | null, style?: string | null, name?: string | null } | null } | null> | null } | { __typename: 'PageBlocksPdfEmbed', title?: string | null, header?: string | null, description?: string | null, url?: string | null, color?: string | null } | { __typename: 'PageBlocksTable', caption?: string | null, markdownTable?: string | null, markupTable?: string | null, color?: string | null } | null> | null } | null } | null> | null } };

export type AreaQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type AreaQuery = { __typename?: 'Query', area: { __typename?: 'Area', id: string, title?: string | null, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Author', id: string } | null } };

export type AreaConnectionQueryVariables = Exact<{ [key: string]: never; }>;


export type AreaConnectionQuery = { __typename?: 'Query', areaConnection: { __typename?: 'AreaConnection', totalCount: number, edges?: Array<{ __typename?: 'AreaConnectionEdges', node?: { __typename?: 'Area', id: string, title?: string | null, heroImg?: string | null, excerpt?: any | null, date?: string | null, _body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, author?: { __typename?: 'Author', id: string } | null } | null } | null> | null } };

export const GlobalPartsFragmentDoc = gql`
    fragment GlobalParts on Global {
  header {
    __typename
    icon {
      __typename
      color
      style
      name
    }
    color
    nav {
      __typename
      href
      label
      dropdown
      orientation
      subitems {
        __typename
        href
        label
        icon {
          __typename
          color
          style
          name
        }
        description
      }
    }
    areas {
      __typename
      href
      label
      icon {
        __typename
        color
        style
        name
      }
      description
      comingSoon
      updated
    }
    resources {
      __typename
      href
      label
      icon {
        __typename
        color
        style
        name
      }
      description
    }
  }
  footer {
    __typename
    color
    paraText
    social {
      __typename
      map
      facebook
      twitter
      linkedin
      github
    }
  }
  theme {
    __typename
    color
    font
    icon
  }
}
    `;
export const LayoutQueryFragmentFragmentDoc = gql`
    fragment LayoutQueryFragment on Query {
  global(relativePath: "index.json") {
    ...GlobalParts
  }
}
    ${GlobalPartsFragmentDoc}`;
export const PostPartsFragmentDoc = gql`
    fragment PostParts on Post {
  title
  heroImg
  excerpt
  author {
    ... on Document {
      id
    }
  }
  _body
}
    `;
export const AuthorPartsFragmentDoc = gql`
    fragment AuthorParts on Author {
  name
  avatar
}
    `;
export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  blocks {
    __typename
    ... on PageBlocksHero {
      tagline
      headline
      text
      actions {
        __typename
        label
        type
        icon
        link
      }
      image {
        __typename
        src
        alt
      }
      color
    }
    ... on PageBlocksFeatures {
      items {
        __typename
        icon {
          __typename
          color
          style
          name
        }
        title
        link
        text
      }
      color
    }
    ... on PageBlocksFeaturesAlt {
      items {
        __typename
        icon {
          __typename
          color
          style
          name
        }
        title
        link
        linkPlaceholder
        comingSoon
        updated
        pointerDetail1
        pointerDetail2
        pointerDetail3
        text
      }
      color
    }
    ... on PageBlocksFeaturesAlt2 {
      items {
        __typename
        icon {
          __typename
          color
          style
          name
        }
        title
        link
        text
      }
      color
    }
    ... on PageBlocksLongCardsGrid {
      items {
        __typename
        icon {
          __typename
          color
          style
          name
        }
        title
        link
        comingSoon
        updated
        text
      }
      color
    }
    ... on PageBlocksCardGrid2 {
      items {
        __typename
        title
        image
        link
        text
      }
      color
    }
    ... on PageBlocksContent {
      body
      color
    }
    ... on PageBlocksVideoCarousel {
      videoDetails {
        __typename
        title
        embedCode
      }
      color
    }
    ... on PageBlocksTestimonial {
      quote
      author
      color
    }
    ... on PageBlocksFlatCardsGrid {
      title
      header
      description
      items {
        __typename
        iconShown
        icon {
          __typename
          color
          style
          name
        }
        chip {
          __typename
          color
          style
          text
        }
        title
        link
        text
        iconColor
      }
      highlightColor
      color
    }
    ... on PageBlocksBanner {
      title
      header
      description
      highlightColor
      color
    }
    ... on PageBlocksFaq {
      title
      content
      color
    }
    ... on PageBlocksQuote {
      quoteContent
      author
      color
    }
    ... on PageBlocksTeamCardsGrid {
      items {
        __typename
        teamGroup
        personName
        personDesignation
        personImage {
          __typename
          src
          alt
        }
        personDescription
      }
      color
      link
      tabsEnabled
    }
    ... on PageBlocksPhotoCardsGrid2 {
      items {
        __typename
        title
        image
        link
        text
      }
      color
    }
    ... on PageBlocksPhotoCardSingle {
      items {
        __typename
        title
        image
        link
        text
      }
      color
    }
    ... on PageBlocksJobCardsGrid {
      items {
        __typename
        icon {
          __typename
          color
          style
          name
        }
        title
        link
        duration
        jobType
        description
      }
      color
    }
    ... on PageBlocksPdfEmbed {
      title
      header
      description
      url
      color
    }
    ... on PageBlocksTable {
      caption
      markdownTable
      markupTable
      color
    }
  }
}
    `;
export const AreaPartsFragmentDoc = gql`
    fragment AreaParts on Area {
  title
  heroImg
  excerpt
  author {
    ... on Document {
      id
    }
  }
  date
  _body
}
    `;
export const PageQueryDocument = gql`
    query PageQuery {
  ...LayoutQueryFragment
  postConnection {
    edges {
      node {
        id
        _values
        author {
          ... on Author {
            ...AuthorParts
          }
        }
        _sys {
          filename
        }
      }
    }
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${AuthorPartsFragmentDoc}`;
export const ContentQueryDocument = gql`
    query ContentQuery($relativePath: String!) {
  ...LayoutQueryFragment
  page(relativePath: $relativePath) {
    ...PageParts
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${PagePartsFragmentDoc}`;
export const BlogPostQueryDocument = gql`
    query BlogPostQuery($relativePath: String!) {
  ...LayoutQueryFragment
  post(relativePath: $relativePath) {
    ...PostParts
    author {
      ... on Author {
        name
        avatar
      }
    }
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${PostPartsFragmentDoc}`;
export const PostDocument = gql`
    query post($relativePath: String!) {
  post(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PostParts
  }
}
    ${PostPartsFragmentDoc}`;
export const PostConnectionDocument = gql`
    query postConnection {
  postConnection {
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PostParts
      }
    }
  }
}
    ${PostPartsFragmentDoc}`;
export const GlobalDocument = gql`
    query global($relativePath: String!) {
  global(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...GlobalParts
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GlobalConnectionDocument = gql`
    query globalConnection {
  globalConnection {
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...GlobalParts
      }
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const AuthorDocument = gql`
    query author($relativePath: String!) {
  author(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AuthorParts
  }
}
    ${AuthorPartsFragmentDoc}`;
export const AuthorConnectionDocument = gql`
    query authorConnection {
  authorConnection {
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AuthorParts
      }
    }
  }
}
    ${AuthorPartsFragmentDoc}`;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection {
  pageConnection {
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const AreaDocument = gql`
    query area($relativePath: String!) {
  area(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AreaParts
  }
}
    ${AreaPartsFragmentDoc}`;
export const AreaConnectionDocument = gql`
    query areaConnection {
  areaConnection {
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AreaParts
      }
    }
  }
}
    ${AreaPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      PageQuery(variables?: PageQueryQueryVariables, options?: C): Promise<{data: PageQueryQuery, variables: PageQueryQueryVariables, query: string}> {
        return requester<{data: PageQueryQuery, variables: PageQueryQueryVariables, query: string}, PageQueryQueryVariables>(PageQueryDocument, variables, options);
      },
    ContentQuery(variables: ContentQueryQueryVariables, options?: C): Promise<{data: ContentQueryQuery, variables: ContentQueryQueryVariables, query: string}> {
        return requester<{data: ContentQueryQuery, variables: ContentQueryQueryVariables, query: string}, ContentQueryQueryVariables>(ContentQueryDocument, variables, options);
      },
    BlogPostQuery(variables: BlogPostQueryQueryVariables, options?: C): Promise<{data: BlogPostQueryQuery, variables: BlogPostQueryQueryVariables, query: string}> {
        return requester<{data: BlogPostQueryQuery, variables: BlogPostQueryQueryVariables, query: string}, BlogPostQueryQueryVariables>(BlogPostQueryDocument, variables, options);
      },
    post(variables: PostQueryVariables, options?: C): Promise<{data: PostQuery, variables: PostQueryVariables, query: string}> {
        return requester<{data: PostQuery, variables: PostQueryVariables, query: string}, PostQueryVariables>(PostDocument, variables, options);
      },
    postConnection(variables?: PostConnectionQueryVariables, options?: C): Promise<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}> {
        return requester<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}, PostConnectionQueryVariables>(PostConnectionDocument, variables, options);
      },
    global(variables: GlobalQueryVariables, options?: C): Promise<{data: GlobalQuery, variables: GlobalQueryVariables, query: string}> {
        return requester<{data: GlobalQuery, variables: GlobalQueryVariables, query: string}, GlobalQueryVariables>(GlobalDocument, variables, options);
      },
    globalConnection(variables?: GlobalConnectionQueryVariables, options?: C): Promise<{data: GlobalConnectionQuery, variables: GlobalConnectionQueryVariables, query: string}> {
        return requester<{data: GlobalConnectionQuery, variables: GlobalConnectionQueryVariables, query: string}, GlobalConnectionQueryVariables>(GlobalConnectionDocument, variables, options);
      },
    author(variables: AuthorQueryVariables, options?: C): Promise<{data: AuthorQuery, variables: AuthorQueryVariables, query: string}> {
        return requester<{data: AuthorQuery, variables: AuthorQueryVariables, query: string}, AuthorQueryVariables>(AuthorDocument, variables, options);
      },
    authorConnection(variables?: AuthorConnectionQueryVariables, options?: C): Promise<{data: AuthorConnectionQuery, variables: AuthorConnectionQueryVariables, query: string}> {
        return requester<{data: AuthorConnectionQuery, variables: AuthorConnectionQueryVariables, query: string}, AuthorConnectionQueryVariables>(AuthorConnectionDocument, variables, options);
      },
    page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      },
    area(variables: AreaQueryVariables, options?: C): Promise<{data: AreaQuery, variables: AreaQueryVariables, query: string}> {
        return requester<{data: AreaQuery, variables: AreaQueryVariables, query: string}, AreaQueryVariables>(AreaDocument, variables, options);
      },
    areaConnection(variables?: AreaConnectionQueryVariables, options?: C): Promise<{data: AreaConnectionQuery, variables: AreaConnectionQueryVariables, query: string}> {
        return requester<{data: AreaConnectionQuery, variables: AreaConnectionQueryVariables, query: string}, AreaConnectionQueryVariables>(AreaConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    let data = {};
    try {
      data = await client.request({
        query: doc,
        variables: vars,
      });
    } catch (e) {
      // swallow errors related to document creation
      console.warn("Warning: There was an error when fetching data");
      console.warn(e);
    }

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql" }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

